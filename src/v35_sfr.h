#if !defined( V35_SFR_H )
#define V35_SFR_H 1

typedef volatile struct
{
    uint8_t port0;
    uint8_t portm0;
    uint8_t portmc0;
    uint8_t dummy1[5];
    uint8_t port1;
    uint8_t portm1;
    uint8_t portmc1;
    uint8_t dummy2[5];
    uint8_t port2;
    uint8_t portm2;
    uint8_t portmc2;
    uint8_t dummy3[37];
    uint8_t portT;
    uint8_t dummy4[2];
    uint8_t portmT;
    uint8_t dummy5[4];
    uint8_t intm;
    uint8_t dummy6[3];
    uint8_t ems0;
    uint8_t ems1;
    uint8_t ems2;
    uint8_t dummy7[5];
    uint8_t exic0;
    uint8_t exic1;
    uint8_t exic2;
    uint8_t dummy8[17];
    uint8_t rxb0;
    uint8_t dummy9;
    uint8_t txb0;
    uint8_t dummy10[2];
    uint8_t srms0;
    uint8_t stms0;
    uint8_t dummy11;
    uint8_t scm0;
    uint8_t scc0;
    uint8_t brg0;
    uint8_t sce0;
    uint8_t seic0;
    uint8_t sric0;
    uint8_t stic0;
    uint8_t dummy12;
    uint8_t rxb1;
    uint8_t dummy13;
    uint8_t txb1;
    uint8_t dummy14[2];
    uint8_t srms1;
    uint8_t stms1;
    uint8_t dummy15;
    uint8_t scm1;
    uint8_t scc1;
    uint8_t brg1;
    uint8_t sce1;
    uint8_t seic1;
    uint8_t sric1;
    uint8_t stic1;
    uint8_t dummy16;
    uint16_t tm0;
    uint16_t md0;
    uint16_t dummy17[2];
    uint16_t tm1;
    uint16_t md1;
    uint16_t dummy18[2];
    uint8_t tmc0;
    uint8_t tmc1;
    uint8_t dummy19[2];
    uint8_t tmms0;
    uint8_t tmms1;
    uint8_t tmms2;
    uint8_t dummy20[5];
    uint8_t tmic0;
    uint8_t tmic1;
    uint8_t tmic2;
    uint8_t dummy21;
    uint8_t dmac0;
    uint8_t dmam0;
    uint8_t dmac1;
    uint8_t dmam1;
    uint8_t dummy22[8];
    uint8_t dic0;
    uint8_t dic1;
    uint8_t dummy23[50];
    uint8_t stbc;
    uint8_t rfm;
    uint8_t dummy24[6];
    uint16_t wtc;
    uint8_t flag;
    uint8_t prc;
    uint8_t tbic;
    uint8_t dummy25[15];
    uint8_t ispr;
    uint8_t dummy26[2];
    uint8_t idb;
} V35_SFR;

_Static_assert(sizeof(V35_SFR) == 0x100, "V35_SFR mismatch");

#endif // V35_SFR_H